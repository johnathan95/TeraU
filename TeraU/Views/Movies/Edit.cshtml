@model TeraU.Models.Movie

@{
    ViewBag.Title = "Edit";
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@using (Html.BeginForm("Edit", "Movies", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_movie)

        <div class="form-group">
            @Html.LabelFor(model => model.movie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.movie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.movie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_genre", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_genre, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_actor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_actor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_actor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.director, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.director, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.director, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.poster, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-xs-10 col-md-5">
                <div class="box box-default">
                    <div class="box-header with-border">
                        <h3 class="box-title">@Html.DisplayFor(model => model.movie) poster</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-10">

                                @{
                                    if (Model.poster != null)
                                    {
                                        var base64 = Convert.ToBase64String(Model.poster);
                                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                        <img src="@imgSrc" height="500" width="380" />
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @Html.ValidationMessageFor(model => model.poster, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                                    }